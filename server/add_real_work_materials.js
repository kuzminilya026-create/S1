import { query } from './database.js';

async function addRealWorkMaterials() {
  try {
    console.log('üîó –î–æ–±–∞–≤–ª—è–µ–º —Ä–µ–∞–ª—å–Ω—ã–µ —Å–≤—è–∑–∏ —Ä–∞–±–æ—Ç–∞-–º–∞—Ç–µ—Ä–∏–∞–ª...');
    
    // –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ –¥–µ–º–æ-–¥–∞–Ω–Ω—ã–µ
    await query('DELETE FROM work_materials WHERE work_id IN (\'w.1\', \'w.10\', \'w.100\', \'w.101\', \'w.102\')');
    console.log('‚úÖ –°—Ç–∞—Ä—ã–µ –¥–µ–º–æ-–¥–∞–Ω–Ω—ã–µ —É–¥–∞–ª–µ–Ω—ã');
    
    // –î–æ–±–∞–≤–ª—è–µ–º —Ä–µ–∞–ª—å–Ω—ã–µ —Å–≤—è–∑–∏
    const realConnections = [
      // w.1: –û—á–∏—Å—Ç–∫–∞ –ø–æ—Ç–æ–ª–∫–∞ –æ—Ç –º–∞—Å–ª—è–Ω–æ–π –∫—Ä–∞—Å–∫–∏ –∏–ª–∏ –∫–ª–µ—è
      { work_id: 'w.1', material_id: 'm.84', consumption: 0.1, waste: 1.05, description: '–ö—Ä–æ–Ω—à—Ç–µ–π–Ω –¥–ª—è –∫—Ä–µ–ø–ª–µ–Ω–∏—è –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞' },
      { work_id: 'w.1', material_id: 'm.85', consumption: 0.05, waste: 1.10, description: '–ö—Ä–æ–Ω—à—Ç–µ–π–Ω –¥–ª—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ –∫—Ä–µ–ø–ª–µ–Ω–∏—è' },
      { work_id: 'w.1', material_id: 'm.86', consumption: 0.02, waste: 1.08, description: '–ö—Ä–æ–Ω—à—Ç–µ–π–Ω –¥–ª—è —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö —Ä–∞–±–æ—Ç' },
      
      // w.10: –î–µ–º–æ–Ω—Ç–∞–∂ –ø–æ—Ç–æ–ª–æ—á–Ω–æ–≥–æ –ø–ª–∏–Ω—Ç—É—Å–∞
      { work_id: 'w.10', material_id: 'm.87', consumption: 0.5, waste: 1.15, description: '–ú–æ–Ω—Ç–∞–∂–Ω–∞—è —à–∏–Ω–∞ –¥–ª—è –¥–µ–º–æ–Ω—Ç–∞–∂–∞' },
      { work_id: 'w.10', material_id: 'm.88', consumption: 0.1, waste: 1.05, description: '–ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –∑–∞–∫—Ä—ã—Ç–∏—è' },
      
      // w.100: –£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ —Ç–µ–ø–ª–æ/–∑–≤—É–∫–æ–∏–∑–æ–ª—è—Ü–∏–∏ –ø–æ—Ç–æ–ª–∫–∞
      { work_id: 'w.100', material_id: 'm.89', consumption: 0.3, waste: 1.12, description: '–ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è –∏–∑–æ–ª—è—Ü–∏–∏' },
      { work_id: 'w.100', material_id: 'm.90', consumption: 0.2, waste: 1.08, description: '–ú–æ–Ω—Ç–∞–∂–Ω–∞—è –≥–∏–ª—å–∑–∞ 16–º–º' },
      { work_id: 'w.100', material_id: 'm.91', consumption: 0.15, waste: 1.10, description: '–ú–æ–Ω—Ç–∞–∂–Ω–∞—è –≥–∏–ª—å–∑–∞ 20–º–º' },
      
      // w.101: –ú–æ–Ω—Ç–∞–∂ –∑–≤—É–∫–æ–∏–∑–æ–ª—è—Ü–∏–æ–Ω–Ω—ã—Ö –ø–∞–Ω–µ–ª–µ–π
      { work_id: 'w.101', material_id: 'm.92', consumption: 0.4, waste: 1.15, description: '–ú–æ–Ω—Ç–∞–∂–Ω–∞—è –≥–∏–ª—å–∑–∞ 25–º–º' },
      { work_id: 'w.101', material_id: 'm.93', consumption: 0.25, waste: 1.12, description: '–ú–æ–Ω—Ç–∞–∂–Ω–∞—è –≥–∏–ª—å–∑–∞ 32–º–º' },
      
      // w.102: –ú–æ–Ω—Ç–∞–∂ –º–µ—Ç–∞–ª–ª–∏—á–µ—Å–∫–æ–≥–æ –∫–∞—Ä–∫–∞—Å–∞
      { work_id: 'w.102', material_id: 'm.84', consumption: 0.8, waste: 1.05, description: '–ö—Ä–æ–Ω—à—Ç–µ–π–Ω —Ç–∏–ø O –¥–ª—è –∫–∞—Ä–∫–∞—Å–∞' },
      { work_id: 'w.102', material_id: 'm.85', consumption: 0.6, waste: 1.10, description: '–ö—Ä–æ–Ω—à—Ç–µ–π–Ω —Ç–∏–ø Z –¥–ª—è –∫–∞—Ä–∫–∞—Å–∞' },
      { work_id: 'w.102', material_id: 'm.86', consumption: 0.3, waste: 1.08, description: '–ö—Ä–æ–Ω—à—Ç–µ–π–Ω —Ç–∏–ø –ï –¥–ª—è –∫–∞—Ä–∫–∞—Å–∞' }
    ];
    
    for (const connection of realConnections) {
      await query(`
        INSERT INTO work_materials (work_id, material_id, consumption_per_work_unit, waste_coeff)
        VALUES ($1, $2, $3, $4)
        ON CONFLICT (work_id, material_id)
        DO UPDATE SET
          consumption_per_work_unit = EXCLUDED.consumption_per_work_unit,
          waste_coeff = EXCLUDED.waste_coeff,
          updated_at = now()
      `, [connection.work_id, connection.material_id, connection.consumption, connection.waste]);
      
      console.log(`‚úÖ ${connection.work_id} -> ${connection.material_id}: ${connection.consumption} –µ–¥. (${connection.description})`);
    }
    
    console.log('\nüìä –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã–µ —Å–≤—è–∑–∏...');
    const checkResult = await query(`
      SELECT 
        wm.work_id,
        wm.material_id,
        wm.consumption_per_work_unit,
        wm.waste_coeff,
        w.name as work_name,
        m.name as material_name,
        m.unit_price as material_unit_price,
        (wm.consumption_per_work_unit * wm.waste_coeff) as total_consumption,
        ((wm.consumption_per_work_unit * wm.waste_coeff) * m.unit_price) as material_cost_per_work_unit
      FROM work_materials wm
      JOIN works_ref w ON wm.work_id = w.id
      JOIN materials m ON wm.material_id = m.id
      WHERE wm.work_id IN ('w.1', 'w.10', 'w.100', 'w.101', 'w.102')
      ORDER BY wm.work_id, wm.material_id
    `);
    
    console.log(`\nüìã –ù–∞–π–¥–µ–Ω–æ —Å–≤—è–∑–µ–π: ${checkResult.rows.length}`);
    checkResult.rows.forEach(row => {
      console.log(`- ${row.work_id} (${row.work_name}) -> ${row.material_id} (${row.material_name})`);
      console.log(`  –†–∞—Å—Ö–æ–¥: ${row.consumption_per_work_unit} √ó ${row.waste_coeff} = ${row.total_consumption} –µ–¥.`);
      console.log(`  –°—Ç–æ–∏–º–æ—Å—Ç—å: ${parseFloat(row.material_cost_per_work_unit).toFixed(2)} ‚ÇΩ –∑–∞ –µ–¥–∏–Ω–∏—Ü—É —Ä–∞–±–æ—Ç—ã`);
    });
    
    console.log('\n‚úÖ –†–µ–∞–ª—å–Ω—ã–µ —Å–≤—è–∑–∏ —Ä–∞–±–æ—Ç–∞-–º–∞—Ç–µ—Ä–∏–∞–ª —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω—ã!');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
  }
}

addRealWorkMaterials();
